eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:9002/eureka/
  instance:
    prefer-ip-address: true


server:
  port: 9045
  tomcat:
    accesslog:
      enabled: true
      directory: C:/logs/maket-service/tomcat/
      pattern: '%h %l %u %t %r %s %b %D'

spring:
  # profiles:
  # active: aws
  application:
    name: MarketService
  redis:
    database: 1
    # Redis服务器地址
    host: 192.168.100.12
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: 9Cpa7vy5nqup0A1s
    # 连接池最大连接数（使用负值表示没有限制）
    jedis:
      pool:
        max-active: 1000
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 100
        # 连接池中的最小空闲连接

        min-idle: 0

    # 连接超时时间（毫秒）
    timeout: 10000
  datasource:
    url: jdbc:mariadb://192.168.100.12:3306/market_service?useFractionalSeconds=true&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true
    username: root
    password: EYcaDDDoLZ2waFCv # password
    driver-class-name: org.mariadb.jdbc.Driver

  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  kafka:
    bootstrap-servers: 192.168.100.12:9092
    producer:
      retries: 0
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger.ms: 1
    consumer:
      enable-auto-commit: false
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        session.timeout.ms: 15000


feign:
  client:
    default:
      #这里时间一定要调长，否则feign客户端会报ReadTimeOut  服务端报Error parsing HTTP request header
      connectTimeout: 30000
      readTimeout: 30000
      loggerLevel: basic

ribbon:
  ReadTimeout: 30000
  ConnectTimeout: 30000

#开放所有页面节点  默认只开启了health、info两个节点
management:
  endpoint:
    health:
      enabled: true
      show-details: always
    metrics:
      enabled: true
    loggers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: false

logging:
  level:
    root: INFO
  config: classpath:logging-config.xml

